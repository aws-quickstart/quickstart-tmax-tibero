#!/bin/bash

USER_PARAM=$2
source $USER_PARAM

aws s3 cp s3://$S3_BUCKET_NAME/tibero_install/install_tibero.sh $USER_HOME/install_tibero.sh
chmod 755 $USER_HOME/install_tibero.sh
$USER_HOME/install_tibero.sh $USER_HOME
rm -rf $USER_HOME/install_tibero.sh

aws s3 cp s3://$S3_BUCKET_NAME/tibero_install/license.xml $TB_HOME/license/license.xml

aws s3 cp s3://$S3_BUCKET_NAME/tibero_config/tbdsn.template $TB_HOME/config/tbdsn.template
aws s3 cp s3://$S3_BUCKET_NAME/tibero_config/gen_tbdsn.sh $TB_HOME/config/gen_tbdsn.sh
chmod 755 $TB_HOME/config/gen_tbdsn.sh
$TB_HOME/config/gen_tbdsn.sh

aws s3 cp s3://$S3_BUCKET_NAME/tibero_config/tibero.template $TB_HOME/config/tibero.template
aws s3 cp s3://$S3_BUCKET_NAME/tibero_config/gen_tibero_tip.sh $TB_HOME/config/gen_tibero_tip.sh
chmod 755 $TB_HOME/config/gen_tibero_tip.sh
$TB_HOME/config/gen_tibero_tip.sh

aws s3 cp s3://$S3_BUCKET_NAME/tibero_config/set_kernel_env.sh $TB_HOME/config/set_kernel_env.sh
chmod 755 $TB_HOME/config/set_kernel_env.sh
sudo $TB_HOME/config/set_kernel_env.sh root $USER_PARAM

aws s3 cp s3://$S3_BUCKET_NAME/lambda_scripts/lambda_failover.sh $TB_HOME/scripts/lambda_failover.sh
chmod 755 $TB_HOME/scripts/lambda_failover.sh

if [ "$1" == 'primary' ];
then
    aws s3 cp s3://$S3_BUCKET_NAME/tibero_config/cm.template $TB_HOME/config/cm.template
    aws s3 cp s3://$S3_BUCKET_NAME/tibero_config/gen_cm_tip.sh $TB_HOME/config/gen_cm_tip.sh
    chmod 755 $TB_HOME/config/gen_cm_tip.sh
    $TB_HOME/config/gen_cm_tip.sh

    aws s3 cp s3://$S3_BUCKET_NAME/tibero_config/mount_volume_p.sh $TB_HOME/config/mount_volume_p.sh
    chmod 755 $TB_HOME/config/mount_volume_p.sh
    mkdir $DATABASE_DIRECTORY

    aws s3 cp s3://$S3_BUCKET_NAME/tibero_config/make_snap_p.sh $TB_HOME/config/make_snap_p.sh
    chmod 755 $TB_HOME/config/make_snap_p.sh

    aws s3 cp s3://$S3_BUCKET_NAME/tibero_config/db_create_p.template $TB_HOME/config/db_create_p.template
    aws s3 cp s3://$S3_BUCKET_NAME/tibero_config/gen_db_p.sh $TB_HOME/config/gen_db_p.sh
    chmod 755 $TB_HOME/config/gen_db_p.sh
    $TB_HOME/config/gen_db_p.sh
elif [ "$1" == 'standby' ];
then
    aws s3 cp s3://$S3_BUCKET_NAME/tibero_config/cm.template $TB_HOME/config/cm.template
    aws s3 cp s3://$S3_BUCKET_NAME/tibero_config/gen_cm_tip.sh $TB_HOME/config/gen_cm_tip.sh
    chmod 755 $TB_HOME/config/gen_cm_tip.sh
    $TB_HOME/config/gen_cm_tip.sh

    aws s3 cp s3://$S3_BUCKET_NAME/tibero_config/make_volume_s.sh $TB_HOME/config/make_volume_s.sh
    chmod 755 $TB_HOME/config/make_volume_s.sh
    mkdir $DATABASE_DIRECTORY

    aws s3 cp s3://$S3_BUCKET_NAME/tibero_config/db_create_s.template $TB_HOME/config/db_create_s.template
    aws s3 cp s3://$S3_BUCKET_NAME/tibero_config/gen_db_s.sh $TB_HOME/config/gen_db_s.sh
    chmod 755 $TB_HOME/config/gen_db_s.sh
    $TB_HOME/config/gen_db_s.sh
elif [ "$1" == 'observer' ];
then
    aws s3 cp s3://$S3_BUCKET_NAME/tibero_config/observer.template $TB_HOME/config/observer.template
    aws s3 cp s3://$S3_BUCKET_NAME/tibero_config/gen_observer_tip.sh $TB_HOME/config/gen_observer_tip.sh
    chmod 755 $TB_HOME/config/gen_observer_tip.sh
    $TB_HOME/config/gen_observer_tip.sh

    aws s3 cp s3://$S3_BUCKET_NAME/tibero_config/wait_tsc_o.sh $TB_HOME/config/wait_tsc_o.sh
    chmod 755 $TB_HOME/config/wait_tsc_o.sh

    aws s3 cp s3://$S3_BUCKET_NAME/lambda_scripts/lambda_event.sh $TB_HOME/scripts/lambda_event.sh
    chmod 755 $TB_HOME/scripts/lambda_event.sh
fi

sleep 2
